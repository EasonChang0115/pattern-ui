(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-49789f46'], { '3f12'(e, t, n) {}, '8e2a'(e, t, n) { 'use strict'; n.r(t); var s = n('7a23'); const c = e => (Object(s.H)('data-v-2cc58060'), e = e(), Object(s.F)(), e); const a = { class: 'message-demo-page' }; const i = c(() => Object(s.j)('h2', { class: 'page-title' }, 'Message 消息提示', -1)); const o = c(() => Object(s.j)('h3', { class: 'section-title' }, '基本用法', -1)); const r = { class: 'section-block' }; const l = { class: 'section-insect' }; const b = Object(s.l)('成功'); const u = Object(s.l)('警告'); const d = Object(s.l)('错误'); const p = Object(s.l)('消息'); const g = c(() => Object(s.j)('h3', { class: 'section-title' }, '代码', -1)); const m = c(() => Object(s.j)('h3', { class: 'section-title' }, '对象方式', -1)); const j = { class: 'section-block' }; const O = { class: 'section-insect' }; const f = Object(s.l)('消息提示'); const k = c(() => Object(s.j)('h3', { class: 'section-title' }, '代码', -1)); function v(e, t, n, c, v, C) { const h = Object(s.N)('pg-button'); const w = Object(s.N)('code-highlight'); const M = Object(s.N)('attributes-viewer'); const z = Object(s.N)('methods-viewer'); return Object(s.E)(), Object(s.i)('div', a, [i, o, Object(s.j)('div', r, [Object(s.j)('div', l, [Object(s.m)(h, { size: 'mini', onClick: c.success }, { default: Object(s.ab)(() => [b]), _: 1 }, 8, ['onClick']), Object(s.m)(h, { size: 'mini', onClick: c.warning }, { default: Object(s.ab)(() => [u]), _: 1 }, 8, ['onClick']), Object(s.m)(h, { size: 'mini', onClick: c.error }, { default: Object(s.ab)(() => [d]), _: 1 }, 8, ['onClick']), Object(s.m)(h, { size: 'mini', onClick: c.info }, { default: Object(s.ab)(() => [p]), _: 1 }, 8, ['onClick'])])]), g, Object(s.m)(w, { code: c.basicCode }, null, 8, ['code']), m, Object(s.j)('div', j, [Object(s.j)('div', O, [Object(s.m)(h, { size: 'mini', onClick: c.advanced }, { default: Object(s.ab)(() => [f]), _: 1 }, 8, ['onClick'])])]), k, Object(s.m)(w, { language: 'javascript', code: c.advancedCode }, null, 8, ['code']), Object(s.m)(M, { attributes: c.attributes }, null, 8, ['attributes']), Object(s.m)(z, { methods: c.methods }, null, 8, ['methods'])]); } var C = n('d5b3'); var h = '\n<template>\n  <pg-button size="mini" @click="success">成功</pg-button>\n  <pg-button size="mini" @click="warning">警告</pg-button>\n  <pg-button size="mini" @click="error">错误</pg-button>\n  <pg-button size="mini" @click="info">消息</pg-button>\n</template>\n\n<script>\n// 单独引入\nimport { PgMessage } from \'pattern-design-ui\';\nimport { getCurrentInstance, h } from \'vue\';\n\nexport default {\n  setup() {\n    const { appContext } = getCurrentInstance();\n    const success = () => PgMessage.success(h(\'p\', null, \'使用 VNode\'));\n    const warning = () => PgMessage.warning(\'这是一条警告的消息\');\n    const error = () => PgMessage.error(\'这是一条错误的消息\');\n    // 全局方法\n    const info = () => appContext.config.globalProperties.$message.info(\'这是一条消息提示\');\n    \n    return {\n      success,\n      warning,\n      error,\n      info\n    };\n  }\n};\n<\/script>\n'; var w = "\n<template>\n  <pg-button size=\"mini\" @click=\"advanced\">消息提示</pg-button>\n</template>\n\n<script>\nimport { PgMessage } from 'pattern-design-ui';\n\nexport default {\n  setup() {\n    const advanced = () => PgMessage({\n      type: 'success',\n      message: '<i>这是一条成功的消息</i>',\n      center: true, // 居中显示\n      useHTML: true // 传入 HTML 片段\n    });\n\n    return {\n      advanced\n    };\n  }\n};\n<\/script>\n"; var M = { setup() { const { appContext: e } = Object(s.o)(); const t = () => C.a.success(Object(s.p)('p', null, '使用 VNode')); const n = () => C.a.warning('这是一条警告的消息'); const c = () => C.a.error('这是一条错误的消息'); const a = () => e.config.globalProperties.$message.info('这是一条消息提示'); const i = () => Object(C.a)({ type: 'success', message: '<i>这是一条成功的消息</i>', center: !0, useHTML: !0 }); const o = [{ param: 'type', desc: '样式类型', type: 'string', options: 'success / warning / error / info', defalt: 'info' }, { param: 'message', desc: '提示内容', type: 'string / VNode', options: '-', defalt: '' }, { param: 'useHTML', desc: '是否以 HTML 的方式渲染 message', type: 'boolean', options: 'true / false', defalt: 'false' }, { param: 'center', desc: '是否居中显示 message 的内容', type: 'boolean', options: 'true / false', defalt: 'false' }]; const r = [{ name: 'close', desc: '关闭当前的 Message，调用 $message / PgMessage 方法返回的实例中的方法', param: '-' }, { name: 'closeAll', desc: '关闭所有的 Message，PgMessage 的方法', param: '-' }]; return { success: t, warning: n, error: c, info: a, advanced: i, basicCode: h, advancedCode: w, attributes: o, methods: r }; } }; var z = (n('da29'), n('6b0d')); var P = n.n(z); const y = P()(M, [['render', v], ['__scopeId', 'data-v-2cc58060']]); t.default = y; }, da29(e, t, n) { 'use strict'; n('3f12'); } }]);
// # sourceMappingURL=chunk-49789f46.56ff2694.js.map
