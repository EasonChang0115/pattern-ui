(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-2d22d603'], { f6da(e, t, c) { 'use strict'; c.r(t); var b = c('7a23'); const a = { class: 'checkbox-demo-page mb-5' }; const l = Object(b.j)('h2', { class: 'page-title' }, 'Checkbox 多選框', -1); const j = Object(b.j)('p', { class: 'description' }, '在一組備選項中進行多選', -1); const o = Object(b.j)('h3', { class: 'section-title' }, '基本用法', -1); const s = Object(b.j)('p', { class: 'description' }, '單獨使用可以表示兩種狀態的切換', -1); const O = { class: 'section-block' }; const d = { class: 'section-insect' }; const i = Object(b.l)('單一選項'); const n = Object(b.j)('div', { class: 'section-information' }, ' v-model 綁定變數，若是單一的 checkbox，默認綁定的變數型態為 boolean，選中為 true。 ', -1); const u = Object(b.j)('h3', { class: 'section-title' }, '禁用狀態', -1); const r = Object(b.j)('p', { class: 'description' }, '多選框不能用的狀態', -1); const m = { class: 'section-block' }; const v = { class: 'section-insect' }; const p = Object(b.l)('選項一'); const f = Object(b.l)('選項二'); const h = Object(b.j)('h3', { class: 'section-title' }, '多選框組', -1); const k = Object(b.j)('p', { class: 'description' }, '適用於在多個狀況下，很多不同組合的多選系列', -1); const y = { class: 'section-block' }; const V = { class: 'section-insect' }; const _ = Object(b.l)('美國隊長'); const g = Object(b.l)('鷹眼'); const H = Object(b.l)('奇異博士'); const E = Object(b.l)('選中且禁用'); const C = { class: 'mt-3', style: { color: '#999999' } }; const J = Object(b.j)('h3', { class: 'section-title' }, '按鈕樣式的單選框組', -1); const L = { class: 'section-block' }; const R = { class: 'section-insect' }; const x = Object(b.l)('獵豹'); const U = Object(b.l)('黑寡婦'); const w = Object(b.l)('浩克'); const z = { class: 'mt-3 mb-3', style: { color: '#999999' } }; const I = { class: 'section-insect' }; const N = Object(b.l)('獵豹'); const A = Object(b.l)('黑寡婦'); const M = Object(b.l)('浩克'); const S = { class: 'mt-3 mb-3', style: { color: '#999999' } }; const q = { class: 'section-insect' }; const B = Object(b.l)('獵豹'); const D = Object(b.l)('黑寡婦'); const F = Object(b.l)('浩克'); const G = { class: 'mt-3 mb-3', style: { color: '#999999' } }; const K = { class: 'section-insect' }; const P = Object(b.l)('獵豹'); const Q = Object(b.l)('黑寡婦'); const T = Object(b.l)('浩克'); const W = { class: 'mt-3', style: { color: '#999999' } }; const X = Object(b.j)('h3', { class: 'section-title' }, 'Checkbox Attributes', -1); const Y = { class: 'section-block' }; const Z = { class: 'table table-striped table-hover' }; const $ = Object(b.j)('h3', { class: 'section-title' }, 'Checkbox Methods', -1); const ee = { class: 'section-block' }; const te = { class: 'table table-striped table-hover' }; function ce(e, t, c, ce, be, ae) { const le = Object(b.N)('pg-checkbox'); const je = Object(b.N)('pg-checkbox-group'); return Object(b.E)(), Object(b.i)('div', a, [l, j, o, s, Object(b.j)('div', O, [Object(b.j)('div', d, [Object(b.m)(le, { modelValue: e.checked, 'onUpdate:modelValue': t[0] || (t[0] = t => e.checked = t), onHandleChange: e.handleChange }, { default: Object(b.ab)(() => [i]), _: 1 }, 8, ['modelValue', 'onHandleChange'])])]), n, u, r, Object(b.j)('div', m, [Object(b.j)('div', v, [Object(b.m)(le, { modelValue: e.checked1, 'onUpdate:modelValue': t[1] || (t[1] = t => e.checked1 = t), disabled: '' }, { default: Object(b.ab)(() => [p]), _: 1 }, 8, ['modelValue']), Object(b.m)(le, { modelValue: e.checked2, 'onUpdate:modelValue': t[2] || (t[2] = t => e.checked2 = t), disabled: '' }, { default: Object(b.ab)(() => [f]), _: 1 }, 8, ['modelValue'])])]), h, k, Object(b.j)('div', y, [Object(b.j)('div', V, [Object(b.m)(je, { modelValue: e.checkList, 'onUpdate:modelValue': t[3] || (t[3] = t => e.checkList = t), onHandleChange: e.handleChange }, { default: Object(b.ab)(() => [Object(b.m)(le, { value: '美國隊長' }, { default: Object(b.ab)(() => [_]), _: 1 }), Object(b.m)(le, { value: '鷹眼', disabled: '' }, { default: Object(b.ab)(() => [g]), _: 1 }), Object(b.m)(le, { value: '奇異博士' }, { default: Object(b.ab)(() => [H]), _: 1 }), Object(b.m)(le, { value: '選中且禁用', disabled: '' }, { default: Object(b.ab)(() => [E]), _: 1 })]), _: 1 }, 8, ['modelValue', 'onHandleChange'])]), Object(b.j)('div', C, ` 我最愛的超級英雄： ${Object(b.R)(e.checkList)}`, 1)]), J, Object(b.j)('div', L, [Object(b.j)('div', R, [Object(b.m)(je, { modelValue: e.favoriteHero1, 'onUpdate:modelValue': t[4] || (t[4] = t => e.favoriteHero1 = t) }, { default: Object(b.ab)(() => [Object(b.m)(le, { value: '獵豹', button: '' }, { default: Object(b.ab)(() => [x]), _: 1 }), Object(b.m)(le, { value: '黑寡婦', button: '' }, { default: Object(b.ab)(() => [U]), _: 1 }), Object(b.m)(le, { value: '浩克', button: '' }, { default: Object(b.ab)(() => [w]), _: 1 })]), _: 1 }, 8, ['modelValue'])]), Object(b.j)('div', z, ` 我最愛的超級英雄： ${Object(b.R)(e.favoriteHero1)}`, 1), Object(b.j)('div', I, [Object(b.m)(je, { modelValue: e.favoriteHero2, 'onUpdate:modelValue': t[5] || (t[5] = t => e.favoriteHero2 = t), size: 'medium' }, { default: Object(b.ab)(() => [Object(b.m)(le, { value: '獵豹', button: '' }, { default: Object(b.ab)(() => [N]), _: 1 }), Object(b.m)(le, { value: '黑寡婦', button: '' }, { default: Object(b.ab)(() => [A]), _: 1 }), Object(b.m)(le, { value: '浩克', disabled: '', button: '' }, { default: Object(b.ab)(() => [M]), _: 1 })]), _: 1 }, 8, ['modelValue'])]), Object(b.j)('div', S, ` 我最愛的超級英雄： ${Object(b.R)(e.favoriteHero2)}`, 1), Object(b.j)('div', q, [Object(b.m)(je, { modelValue: e.favoriteHero3, 'onUpdate:modelValue': t[6] || (t[6] = t => e.favoriteHero3 = t), size: 'small' }, { default: Object(b.ab)(() => [Object(b.m)(le, { value: '獵豹', button: '' }, { default: Object(b.ab)(() => [B]), _: 1 }), Object(b.m)(le, { value: '黑寡婦', button: '' }, { default: Object(b.ab)(() => [D]), _: 1 }), Object(b.m)(le, { value: '浩克', button: '' }, { default: Object(b.ab)(() => [F]), _: 1 })]), _: 1 }, 8, ['modelValue'])]), Object(b.j)('div', G, ` 我最愛的超級英雄： ${Object(b.R)(e.favoriteHero3)}`, 1), Object(b.j)('div', K, [Object(b.m)(je, { modelValue: e.favoriteHero4, 'onUpdate:modelValue': t[7] || (t[7] = t => e.favoriteHero4 = t), size: 'mini', disabled: '' }, { default: Object(b.ab)(() => [Object(b.m)(le, { value: '獵豹', button: '' }, { default: Object(b.ab)(() => [P]), _: 1 }), Object(b.m)(le, { value: '黑寡婦', button: '' }, { default: Object(b.ab)(() => [Q]), _: 1 }), Object(b.m)(le, { value: '浩克', button: '' }, { default: Object(b.ab)(() => [T]), _: 1 })]), _: 1 }, 8, ['modelValue'])]), Object(b.j)('div', W, ` 我最愛的超級英雄： ${Object(b.R)(e.favoriteHero4)}`, 1)]), X, Object(b.j)('div', Y, [Object(b.j)('table', Z, [Object(b.j)('thead', null, [Object(b.j)('tr', null, [(Object(b.E)(!0), Object(b.i)(b.a, null, Object(b.L)(Object.keys(e.attributeOptions), t => (Object(b.E)(), Object(b.i)('th', { key: t }, Object(b.R)(e.attributeOptions[t]), 1))), 128))])]), Object(b.j)('tbody', null, [(Object(b.E)(!0), Object(b.i)(b.a, null, Object(b.L)(e.attributes, e => (Object(b.E)(), Object(b.i)('tr', { key: e.param }, [(Object(b.E)(!0), Object(b.i)(b.a, null, Object(b.L)(Object.keys(e), t => (Object(b.E)(), Object(b.i)('td', { key: t + e.param }, Object(b.R)(e[t]), 1))), 128))]))), 128))])])]), $, Object(b.j)('div', ee, [Object(b.j)('table', te, [Object(b.j)('thead', null, [Object(b.j)('tr', null, [(Object(b.E)(!0), Object(b.i)(b.a, null, Object(b.L)(Object.keys(e.methodOptions), t => (Object(b.E)(), Object(b.i)('th', { key: t }, Object(b.R)(e.methodOptions[t]), 1))), 128))])]), Object(b.j)('tbody', null, [(Object(b.E)(!0), Object(b.i)(b.a, null, Object(b.L)(e.methods, e => (Object(b.E)(), Object(b.i)('tr', { key: e.param }, [(Object(b.E)(!0), Object(b.i)(b.a, null, Object(b.L)(Object.keys(e), t => (Object(b.E)(), Object(b.i)('td', { key: t + e.param }, Object(b.R)(e[t]), 1))), 128))]))), 128))])])])]); } var be = c('00eb'); var ae = Object(b.n)({ props: { msg: { type: String } }, setup(e) { const t = Object(b.J)([]); const c = Object(b.J)([]); const a = Object(b.J)([]); const l = Object(b.J)([]); const j = Object(b.J)(!1); const o = Object(b.J)(!1); const s = Object(b.J)(!0); const O = Object(b.J)(['奇異博士', '選中且禁用']); const d = Object(b.I)([{ param: 'v-model', desc: '雙向綁定值', type: 'string / number / boolean', options: '-', defalt: '—' }, { param: 'label', desc: 'radio 顯示的內容，若是 slot 沒有會優先才會抓這個', type: '', options: 'primary / success / warning / danger / info / text', defalt: '—' }, { param: 'value', desc: 'radio 的 value, vue 3 之後 v-model customer 已經改成 modelValue', type: 'string / number / boolean', options: '—', defalt: '-' }, { param: 'name', desc: '原生 name 属性', type: 'string', options: '—', defalt: '-' }, { param: 'button', desc: '是否為按鈕樣式', type: 'boolean', options: '—', defalt: 'false' }, { param: 'disabled', desc: '是否禁用', type: 'boolean', options: '—', defalt: 'false' }]); const i = Object(b.I)([{ param: '選中的 radio 原生 event', desc: '綁定值變化時會觸發的事件', name: 'change' }]); const n = e => { console.log(e); }; return { attributes: d, methods: i, attributeOptions: be.a, methodOptions: be.b, favoriteHero1: t, favoriteHero2: c, favoriteHero3: a, favoriteHero4: l, checked: j, checked1: o, checked2: s, handleChange: n, checkList: O }; } }); var le = c('6b0d'); var je = c.n(le); const oe = je()(ae, [['render', ce]]); t.default = oe; } }]);
// # sourceMappingURL=chunk-2d22d603.3844708e.js.map
