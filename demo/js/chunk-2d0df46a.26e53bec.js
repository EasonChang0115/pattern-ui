(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-2d0df46a'], { '88e9'(n, e, i) { 'use strict'; i.r(e); var t = i('7a23'); const a = { class: 'pattern_ui_layout mb-5' }; const s = Object(t.k)('<h1>斷點(BreakPoints)</h1><p>斷點是 RWD 最直觀的觸發時機，用在控制排版時，在不同設備或是不同可視區域大小進行響應式變化。</p><br><h2>核心</h2><hr><ul><ol> 斷點是響應式開發的基礎。 </ol><ol> 使用 media queries 的方式建構整個響應式網站，通常會使用 min-width 來區別。 </ol><ol> 通常開發響應式網站會以行動裝置為最優先。 </ol></ul><br><br><h2>網格選項</h2><hr><p>同 Bootstrap 預設六個斷點，主要用於 RWD 建立響應是開發。</p>', 11); const o = { class: 'table table-striped' }; const l = Object(t.j)('thead', null, [Object(t.j)('tr', null, [Object(t.j)('th', null, 'Break Point'), Object(t.j)('th', null, 'Class infix'), Object(t.j)('th', null, 'Dimensions')])], -1); const d = Object(t.k)('<br><h2>Mixin</h2><hr><p>在 sass 中已經寫好對應的 mixin 來針對斷點或網格系統，應用在我們的排版當中</p><h3>最小寬度</h3><pre>    <code>\n      // Source mixins\n\n      // No media query necessary for xs breakpoint as it&#39;s effectively `@media (min-width: 0) { ... }`\n      @include media-breakpoint-up(sm) { ... }\n      @include media-breakpoint-up(md) { ... }\n      @include media-breakpoint-up(lg) { ... }\n      @include media-breakpoint-up(xl) { ... }\n      @include media-breakpoint-up(xxl) { ... }\n\n      // Usage\n      // Example: Hide starting at `min-width: 0`, and then show at the `sm` breakpoint\n      .custom-class {\n        display: none;\n      }\n      @include media-breakpoint-up(sm) {\n        .custom-class {\n          display: block;\n        }\n      }\n    </code>\n    </pre><h3>最大寬度</h3><pre>    <code>\n      // No media query necessary for xs breakpoint as it&#39;s effectively `@media (max-width: 0) { ... }`\n      @include media-breakpoint-down(sm) { ... }\n      @include media-breakpoint-down(md) { ... }\n      @include media-breakpoint-down(lg) { ... }\n      @include media-breakpoint-down(xl) { ... }\n      @include media-breakpoint-down(xxl) { ... }\n\n      // Example: Style from medium breakpoint and down\n      @include media-breakpoint-down(md) {\n        .custom-class {\n          display: block;\n        }\n      }\n    </code>\n    </pre><h3>其他詳盡請參考 <a href="https://getbootstrap.com/docs/5.0/layout/breakpoints/" target="_blank">bootstrap 5 的文檔 </a></h3>', 9); function r(n, e, i, r, c, b) { return Object(t.E)(), Object(t.i)('div', a, [s, Object(t.j)('table', o, [l, Object(t.j)('tbody', null, [(Object(t.E)(!0), Object(t.i)(t.a, null, Object(t.L)(r.gridOptions, n => (Object(t.E)(), Object(t.i)('tr', { key: n.breakPoint }, [Object(t.j)('td', null, Object(t.R)(n.breakPoint), 1), Object(t.j)('td', null, Object(t.R)(n.classInfix), 1), Object(t.j)('td', null, Object(t.R)(n.dimensions), 1)]))), 128))])]), d]); } var c = { setup() { const n = Object(t.J)([{ breakPoint: 'X-Small', classInfix: 'None', dimensions: '< 576px' }, { breakPoint: 'Small', classInfix: 'sm', dimensions: '≥ 576px' }, { breakPoint: 'Medium', classInfix: 'md', dimensions: '≥ 768px' }, { breakPoint: 'Large', classInfix: 'lg', dimensions: '≥ 992px' }, { breakPoint: 'Extra large', classInfix: 'xl', dimensions: '≥ 1200px' }, { breakPoint: 'Extra extra large', classInfix: 'xxl', dimensions: '≥ 1400px' }]); return { gridOptions: n }; } }; var b = i('6b0d'); var p = i.n(b); const m = p()(c, [['render', r]]); e.default = m; } }]);
// # sourceMappingURL=chunk-2d0df46a.26e53bec.js.map
