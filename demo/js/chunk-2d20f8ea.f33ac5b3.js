(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-2d20f8ea'], { b3ad(e, t, a) { 'use strict'; a.r(t); var c = a('7a23'); const l = { class: 'radio-demo-page mb-5' }; const b = Object(c.j)('h2', { class: 'page-title' }, 'Radio 單選框', -1); const o = Object(c.j)('p', { class: 'description' }, '在一組備選項中進行單選', -1); const j = Object(c.j)('h3', { class: 'section-title' }, '基本用法', -1); const s = Object(c.j)('p', { class: 'description' }, '若是選項過多，請用 select 進行選擇', -1); const O = { class: 'section-block' }; const i = { class: 'section-insect' }; const d = { class: 'mt-3', style: { color: '#999999' } }; const n = Object(c.j)('div', { class: 'section-information' }, ' 使用 Radio 組件，只需要設置 v-model 綁定變量，選中代表變量的值為相應的 value 值，value 可以是 String, Number, Boolean。 ', -1); const u = Object(c.j)('h3', { class: 'section-title' }, '禁用狀態', -1); const r = Object(c.j)('p', { class: 'description' }, '單選框不能被點選的狀態', -1); const m = { class: 'section-block' }; const v = { class: 'section-insect' }; const p = Object(c.l)('蜘蛛人'); const f = Object(c.l)('蟻人'); const h = { class: 'mt-3', style: { color: '#999999' } }; const y = Object(c.j)('h3', { class: 'section-title' }, '單選框組', -1); const V = Object(c.j)('p', { class: 'description' }, '適用於在多個狀況下，很多不同組合的單選系列', -1); const g = { class: 'section-block' }; const H = { class: 'section-insect' }; const _ = Object(c.l)('美國隊長'); const E = Object(c.l)('鷹眼'); const k = Object(c.l)('奇異博士'); const R = { class: 'mt-3', style: { color: '#999999' } }; const J = Object(c.j)('h3', { class: 'section-title' }, '按鈕樣式的單選框組', -1); const L = { class: 'section-block' }; const U = { class: 'section-insect' }; const w = Object(c.l)('獵豹'); const x = Object(c.l)('黑寡婦'); const C = Object(c.l)('浩克'); const z = { class: 'mt-3 mb-3', style: { color: '#999999' } }; const N = { class: 'section-insect' }; const I = Object(c.l)('獵豹'); const S = Object(c.l)('黑寡婦'); const A = Object(c.l)('浩克'); const B = { class: 'mt-3 mb-3', style: { color: '#999999' } }; const M = { class: 'section-insect' }; const q = Object(c.l)('獵豹'); const D = Object(c.l)('黑寡婦'); const F = Object(c.l)('浩克'); const G = { class: 'mt-3 mb-3', style: { color: '#999999' } }; const K = { class: 'section-insect' }; const P = Object(c.l)('獵豹'); const Q = Object(c.l)('黑寡婦'); const T = Object(c.l)('浩克'); const W = { class: 'mt-3', style: { color: '#999999' } }; const X = Object(c.j)('h3', { class: 'section-title' }, 'Radio Attributes', -1); const Y = { class: 'section-block' }; const Z = { class: 'table table-striped table-hover' }; const $ = Object(c.j)('h3', { class: 'section-title' }, 'Radio Methods', -1); const ee = { class: 'section-block' }; const te = { class: 'table table-striped table-hover' }; function ae(e, t, a, ae, ce, le) { const be = Object(c.N)('pg-radio'); const oe = Object(c.N)('pg-radio-group'); return Object(c.E)(), Object(c.i)('div', l, [b, o, j, s, Object(c.j)('div', O, [Object(c.j)('div', i, [(Object(c.E)(!0), Object(c.i)(c.a, null, Object(c.L)(e.heroList, a => (Object(c.E)(), Object(c.g)(be, { key: a.value, value: a.value, modelValue: e.favoriteHero, 'onUpdate:modelValue': t[0] || (t[0] = t => e.favoriteHero = t), onChange: e.handleChange }, { default: Object(c.ab)(() => [Object(c.l)(Object(c.R)(a.value), 1)]), _: 2 }, 1032, ['value', 'modelValue', 'onChange']))), 128))]), Object(c.j)('div', d, ` 我最愛的超級英雄： ${Object(c.R)(e.favoriteHero)}`, 1)]), n, u, r, Object(c.j)('div', m, [Object(c.j)('div', v, [Object(c.m)(be, { value: '蜘蛛人', modelValue: e.disableExample, 'onUpdate:modelValue': t[1] || (t[1] = t => e.disableExample = t), disabled: '' }, { default: Object(c.ab)(() => [p]), _: 1 }, 8, ['modelValue']), Object(c.m)(be, { value: '蟻人', modelValue: e.disableExample, 'onUpdate:modelValue': t[2] || (t[2] = t => e.disableExample = t), disabled: '' }, { default: Object(c.ab)(() => [f]), _: 1 }, 8, ['modelValue'])]), Object(c.j)('div', h, ` 我最愛的超級英雄： ${Object(c.R)(e.disableExample)}`, 1)]), y, V, Object(c.j)('div', g, [Object(c.j)('div', H, [Object(c.m)(oe, { modelValue: e.favoriteHero0, 'onUpdate:modelValue': t[3] || (t[3] = t => e.favoriteHero0 = t), onChange: e.handleChange }, { default: Object(c.ab)(() => [Object(c.m)(be, { value: '美國隊長' }, { default: Object(c.ab)(() => [_]), _: 1 }), Object(c.m)(be, { value: '鷹眼' }, { default: Object(c.ab)(() => [E]), _: 1 }), Object(c.m)(be, { value: '奇異博士' }, { default: Object(c.ab)(() => [k]), _: 1 })]), _: 1 }, 8, ['modelValue', 'onChange'])]), Object(c.j)('div', R, ` 我最愛的超級英雄： ${Object(c.R)(e.favoriteHero0)}`, 1)]), J, Object(c.j)('div', L, [Object(c.j)('div', U, [Object(c.m)(oe, { modelValue: e.favoriteHero1, 'onUpdate:modelValue': t[4] || (t[4] = t => e.favoriteHero1 = t) }, { default: Object(c.ab)(() => [Object(c.m)(be, { value: '獵豹', button: '' }, { default: Object(c.ab)(() => [w]), _: 1 }), Object(c.m)(be, { value: '黑寡婦', button: '' }, { default: Object(c.ab)(() => [x]), _: 1 }), Object(c.m)(be, { value: '浩克', button: '' }, { default: Object(c.ab)(() => [C]), _: 1 })]), _: 1 }, 8, ['modelValue'])]), Object(c.j)('div', z, ` 我最愛的超級英雄： ${Object(c.R)(e.favoriteHero1)}`, 1), Object(c.j)('div', N, [Object(c.m)(oe, { modelValue: e.favoriteHero2, 'onUpdate:modelValue': t[5] || (t[5] = t => e.favoriteHero2 = t), size: 'medium' }, { default: Object(c.ab)(() => [Object(c.m)(be, { value: '獵豹', button: '' }, { default: Object(c.ab)(() => [I]), _: 1 }), Object(c.m)(be, { value: '黑寡婦', button: '' }, { default: Object(c.ab)(() => [S]), _: 1 }), Object(c.m)(be, { value: '浩克', disabled: '', button: '' }, { default: Object(c.ab)(() => [A]), _: 1 })]), _: 1 }, 8, ['modelValue'])]), Object(c.j)('div', B, ` 我最愛的超級英雄： ${Object(c.R)(e.favoriteHero2)}`, 1), Object(c.j)('div', M, [Object(c.m)(oe, { modelValue: e.favoriteHero3, 'onUpdate:modelValue': t[6] || (t[6] = t => e.favoriteHero3 = t), size: 'small' }, { default: Object(c.ab)(() => [Object(c.m)(be, { value: '獵豹', button: '' }, { default: Object(c.ab)(() => [q]), _: 1 }), Object(c.m)(be, { value: '黑寡婦', button: '' }, { default: Object(c.ab)(() => [D]), _: 1 }), Object(c.m)(be, { value: '浩克', button: '' }, { default: Object(c.ab)(() => [F]), _: 1 })]), _: 1 }, 8, ['modelValue'])]), Object(c.j)('div', G, ` 我最愛的超級英雄： ${Object(c.R)(e.favoriteHero3)}`, 1), Object(c.j)('div', K, [Object(c.m)(oe, { modelValue: e.favoriteHero4, 'onUpdate:modelValue': t[7] || (t[7] = t => e.favoriteHero4 = t), size: 'mini', disabled: '' }, { default: Object(c.ab)(() => [Object(c.m)(be, { value: '獵豹', button: '' }, { default: Object(c.ab)(() => [P]), _: 1 }), Object(c.m)(be, { value: '黑寡婦', button: '' }, { default: Object(c.ab)(() => [Q]), _: 1 }), Object(c.m)(be, { value: '浩克', button: '' }, { default: Object(c.ab)(() => [T]), _: 1 })]), _: 1 }, 8, ['modelValue'])]), Object(c.j)('div', W, ` 我最愛的超級英雄： ${Object(c.R)(e.favoriteHero4)}`, 1)]), X, Object(c.j)('div', Y, [Object(c.j)('table', Z, [Object(c.j)('thead', null, [Object(c.j)('tr', null, [(Object(c.E)(!0), Object(c.i)(c.a, null, Object(c.L)(Object.keys(e.attributeOptions), t => (Object(c.E)(), Object(c.i)('th', { key: t }, Object(c.R)(e.attributeOptions[t]), 1))), 128))])]), Object(c.j)('tbody', null, [(Object(c.E)(!0), Object(c.i)(c.a, null, Object(c.L)(e.attributes, e => (Object(c.E)(), Object(c.i)('tr', { key: e.param }, [(Object(c.E)(!0), Object(c.i)(c.a, null, Object(c.L)(Object.keys(e), t => (Object(c.E)(), Object(c.i)('td', { key: t + e.param }, Object(c.R)(e[t]), 1))), 128))]))), 128))])])]), $, Object(c.j)('div', ee, [Object(c.j)('table', te, [Object(c.j)('thead', null, [Object(c.j)('tr', null, [(Object(c.E)(!0), Object(c.i)(c.a, null, Object(c.L)(Object.keys(e.methodOptions), t => (Object(c.E)(), Object(c.i)('th', { key: t }, Object(c.R)(e.methodOptions[t]), 1))), 128))])]), Object(c.j)('tbody', null, [(Object(c.E)(!0), Object(c.i)(c.a, null, Object(c.L)(e.methods, e => (Object(c.E)(), Object(c.i)('tr', { key: e.param }, [(Object(c.E)(!0), Object(c.i)(c.a, null, Object(c.L)(Object.keys(e), t => (Object(c.E)(), Object(c.i)('td', { key: t + e.param }, Object(c.R)(e[t]), 1))), 128))]))), 128))])])])]); } var ce = a('00eb'); var le = Object(c.n)({ props: { msg: { type: String } }, setup: e => { const t = Object(c.J)(''); const a = [{ value: '神力女超人' }, { value: '雷神索爾' }, { value: '鋼鐵人' }]; const l = Object(c.J)(''); const b = Object(c.J)('浩克'); const o = Object(c.J)('獵豹'); const j = Object(c.J)('黑寡婦'); const s = Object(c.J)(''); const O = Object(c.J)(''); const i = Object(c.I)([{ param: 'v-model', desc: '雙向綁定值', type: 'string / number / boolean', options: '-', defalt: '—' }, { param: 'label', desc: 'radio 顯示的內容，若是 slot 沒有會優先才會抓這個', type: '', options: 'primary / success / warning / danger / info / text', defalt: '—' }, { param: 'value', desc: 'radio 的 value, vue 3 之後 v-model customer 已經改成 modelValue', type: 'string / number / boolean', options: '—', defalt: '-' }, { param: 'name', desc: '原生 name 属性', type: 'string', options: '—', defalt: '-' }, { param: 'button', desc: '是否為按鈕樣式', type: 'boolean', options: '—', defalt: 'false' }, { param: 'disabled', desc: '是否禁用', type: 'boolean', options: '—', defalt: 'false' }]); const d = Object(c.I)([{ param: '選中的 radio 原生 event', desc: '綁定值變化時會觸發的事件', name: 'change' }]); const n = e => { console.log(e.target.value); }; return { attributeOptions: ce.a, methodOptions: ce.b, attributes: i, methods: d, disableExample: l, heroList: a, favoriteHero: t, favoriteHero0: O, favoriteHero1: b, favoriteHero2: o, favoriteHero3: j, favoriteHero4: s, handleChange: n }; } }); var be = a('6b0d'); var oe = a.n(be); const je = oe()(le, [['render', ae]]); t.default = je; } }]);
// # sourceMappingURL=chunk-2d20f8ea.f33ac5b3.js.map
